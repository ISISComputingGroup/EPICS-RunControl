## either load with PVA defined as an alias to create for PV
## or load with   NOALIAS=#   to comment out alias line  

## load with   NOARCHIVE=#   to disable archiving of run control values
## this is likely only needed on NDADETMON as it does not need run control and
## having a lot of blocks this slows doen archive engine startup

record(ao, "$(PV):$(MODE):HIGH")
{
    field(DESC, "$(MODE) Control high limit")
	field(PREC, "2")
    info(autosaveFields, "VAL")
	$(NOARCHIVE=) info(archive, "VAL")
	$(NOALIAS=) alias("$(PVA=):$(MODE):HIGH")
}

record(ao, "$(PV):$(MODE):LOW")
{
    field(DESC, "$(MODE) control low limit")
	field(PREC, "2")
    info(autosaveFields, "VAL")
	$(NOARCHIVE=) info(archive, "VAL")
	$(NOALIAS=) alias("$(PVA=):$(MODE):LOW")
}
record(ao, "$(PV):$(MODE):OUT:DELAY")
{
    field(DESC, "$(MODE) out action delay")
	field(PREC, "2")
	field(VAL, "0")
    info(autosaveFields, "VAL")
	$(NOALIAS=) alias("$(PVA=):$(MODE):OUT:DELAY")
}

record(ao, "$(PV):$(MODE):IN:DELAY")
{
    field(DESC, "$(MODE) in action delay")
	field(PREC, "2")
	field(VAL, "0")
    info(autosaveFields, "VAL")
	$(NOALIAS=) alias("$(PVA=):$(MODE):IN:DELAY")
}


## show number of seconds out of range
record(ai, "$(PV):$(MODE):OUT:TIME")
{
    field(VAL, "0")
    field(DESC, "Time out of range")
	field(EGU, "s")
	field(PREC, "1")
	$(NOALIAS=) alias("$(PVA=):$(MODE):OUT:TIME")
}

## show number of seconds in range
record(ai, "$(PV):$(MODE):IN:TIME")
{
    field(VAL, "0")
    field(DESC, "Time in range")
	field(EGU, "s")
	field(PREC, "1")
	$(NOALIAS=) alias("$(PVA=):$(MODE):IN:TIME")
}

record(bi, "$(PV):$(MODE):INRANGE")
{
    field(DESC, "$(MODE) control in range")
	field(ZNAM, "NO")
	field(ONAM, "YES")
	field(VAL, 1)
	$(NOARCHIVE=) info(archive, "VAL")
	$(NOALIAS=) alias("$(PVA=):$(MODE):INRANGE")
}

record(bo, "$(PV):$(MODE):SOI")
{
    field(DESC, "$(MODE) suspend on invalid")
	field(ZNAM, "NO")
	field(ONAM, "YES")
	field(VAL, "0")
    info(autosaveFields, "VAL")
	$(NOARCHIVE=) info(archive, "VAL")
	$(NOALIAS=) alias("$(PVA=):$(MODE):SOI")
}

## we forward link into the _CALCSCAN chain
## to make sure if run control is disabled we process
## and set in range
record(bo, "$(PV):$(MODE):ENABLE")
{
    field(DESC, "$(MODE) control enable")
	field(ZNAM, "NO")
	field(ONAM, "YES")
	field(VAL, 0)
	field(PINI, "YES")
	field(FLNK, "$(PV):$(MODE):_SEV_CHK.PROC CA")
    info(autosaveFields, "VAL")
	$(NOARCHIVE=) info(archive, "VAL")
	$(NOALIAS=) alias("$(PVA=):$(MODE):ENABLE")
}

## main processing loop
## only scan if control enabled
record(bo, "$(PV):$(MODE):_CALCSCAN")
{
    field(SCAN, "1 second")
	field(SDIS, "$(PV):$(MODE):ENABLE")
	field(DISV, "0")
    field(FLNK, "$(PV):$(MODE):OUT:_TC")
}

## calculate number of seconds out of range
record(calcout, "$(PV):$(MODE):OUT:_TC")
{
    field(INPA, "$(PV):$(MODE):INRANGE NPP")
    field(INPB, "$(PV):$(MODE):OUT:TIME NPP")
	field(CALC, "A = 0 ? B + 1 : 0")
	field(OOPT, "On Change")
    field(OUT, "$(PV):$(MODE):OUT:TIME PP")
	field(FLNK, "$(PV):$(MODE):IN:_TC")
}

## calculate number of seconds in range
record(calcout, "$(PV):$(MODE):IN:_TC")
{
    field(INPA, "$(PV):$(MODE):INRANGE NPP")
    field(INPB, "$(PV):$(MODE):IN:TIME NPP")
	field(CALC, "A = 0 ? 0 : B + 1")
	field(OOPT, "On Change")
    field(OUT, "$(PV):$(MODE):IN:TIME PP")
	field(FLNK, "$(PV):$(MODE):_SEV_CHK")
}

record(calcout, "$(PV):$(MODE):_SEV_CHK")
{
    field(INPA, "$(PV).SEVR")
    field(CALC, "A")
    field(OCAL, "A")
    field(IVOA, "Set output to IVOV")
    field(IVOV, "3")  # If INPA becomes disconnected treat like an INVALID alarm
    field(OOPT, "Every Time")
	field(DOPT, "Use OCAL")
    field(OUT, "$(PV):$(MODE):_CALC.E NPP")
    field(FLNK, "$(PV):$(MODE):_VAL_CHK")
}

record(calcout, "$(PV):$(MODE):_VAL_CHK")
{
    field(INPA, "$(PV)")
    field(CALC, "A")
    field(OCAL, "A")
    field(OOPT, "Every Time")
	field(DOPT, "Use OCAL")
    field(OUT, "$(PV):$(MODE):_CALC.A NPP")
    field(FLNK, "$(PV):$(MODE):_CALC")
}

record(calcout, "$(PV):$(MODE):_CALC")
{
    field(INPA, "")  # Written from $(PV):$(MODE):_VAL_CHK
    field(INPB, "$(PV):$(MODE):LOW")
    field(INPC, "$(PV):$(MODE):HIGH")
    field(INPD, "$(PV):$(MODE):ENABLE")
    field(INPE, "")  # Written from $(PV):$(MODE):_SEV_CHK
    field(INPF, "$(PV):$(MODE):SOI")
	field(CALC, "((D=0)||(A>=B&&A<=C&&(E<3||F=0)))?12:3")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")
	field(OUT, "$(PV):$(MODE):_SEQ.SELN")
    field(IVOA, "Continue normally")
	field(FLNK, "$(PV):$(MODE):_SEQ.PROC")
}

record(lsi, "$(PV):$(MODE):_PVNAME")
{
    field(SIZV, 256)
    field(INP, {const:"$(PV)"})
#    field(INP, ["$(PV)"])
}

record(sseq, "$(PV):$(MODE):_SEQ")
{
    field(SELM, "Mask")
	field(STR1, "NO")
	field(STR2, "1")
	field(STR3, "YES")
	field(STR4, "1")
	field(LNK1, "$(PV):$(MODE):INRANGE PP")
	field(LNK2, "$(PV):$(MODE):_OUT.PROC PP")
	field(LNK3, "$(PV):$(MODE):INRANGE PP")
	field(LNK4, "$(PV):$(MODE):_IN.PROC PP")
}

record(waveform, "$(PV):$(MODE):_OUT")
{
	field(NELM, "256")
	field(FTVL, "CHAR")
	field(INP, "$(PV):$(MODE):_PVNAME.VAL$")
	field(FLNK, "$(PV):$(MODE):_OUT:CALC.PROC")
}	

record(calcout, "$(PV):$(MODE):_OUT:CALC")
{
    field(INPA, "$(PV):$(MODE):OUT:TIME NPP")     
	field(INPB, "$(PV):$(MODE):OUT:DELAY NPP")
	field(CALC, "A>B?1:0")
	field(OOPT, "When Non-zero")
	field(OCAL, "1")
	field(DOPT, "Use OCAL")
	field(OUT, "$(PV):$(MODE):_OUT:DO.PROC PP")
}	

record(aSub, "$(PV):$(MODE):_OUT:DO")
{
    field(SNAM, "addToSet")
	field(INPA, "$(P)CS:$(MODE):_SETNAME")
	field(FTA, "STRING")
	field(INPB, "$(PV):$(MODE):_OUT")
	field(FTB, "CHAR")
	field(NOB, "256")
	field(INPC, "$(PV):$(MODE):_OUT.NELM") # NORD not set by CA
	field(FTC, "ULONG")
}

record(waveform, "$(PV):$(MODE):_IN")
{
	field(NELM, "256")
	field(FTVL, "CHAR")
	field(INP, "$(PV):$(MODE):_PVNAME.VAL$")
	field(FLNK, "$(PV):$(MODE):_IN:CALC.PROC")
}	

record(calcout, "$(PV):$(MODE):_IN:CALC")
{
    field(INPA, "$(PV):$(MODE):IN:TIME NPP")     
	field(INPB, "$(PV):$(MODE):IN:DELAY NPP")
    field(INPC, "$(PV):$(MODE):ENABLE NPP")
	field(CALC, "((C=0)||(A>B))?1:0")
	field(OOPT, "When Non-zero")
	field(OCAL, "1")
	field(DOPT, "Use OCAL")
	field(OUT, "$(PV):$(MODE):_IN:DO.PROC PP")
}	

record(aSub, "$(PV):$(MODE):_IN:DO")
{
    field(SNAM, "removeFromSet")
	field(INPA, "$(P)CS:$(MODE):_SETNAME")
	field(FTA, "STRING")
	field(INPB, "$(PV):$(MODE):_IN")
	field(FTB, "CHAR")
	field(NOB, "256")
	field(INPC, "$(PV):$(MODE):_IN.NELM") # NORD not set by CA
	field(FTC, "ULONG")
}

